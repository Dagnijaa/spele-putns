import pygame
import random
import sys

# Game settings
WIDTH = 400
HEIGHT = 600
FPS = 60
BIRD_WIDTH = 50
BIRD_HEIGHT = 35
WALL_WIDTH = 80
WALL_GAP = 200
WALL_SPEED = 3
GRAVITY = 0.2

# Colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)

# Initialize Pygame
pygame.init()
screen = pygame.display.set_mode((WIDTH, HEIGHT))
clock = pygame.time.Clock()

# Load images
bird_img = pygame.image.load('bird.png')
bird_img = pygame.transform.scale(bird_img, (BIRD_WIDTH, BIRD_HEIGHT))
wall_img = pygame.image.load('wall.png')
wall_img = pygame.transform.scale(wall_img, (WALL_WIDTH, HEIGHT))

# Bird class
class Bird(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = bird_img
        self.rect = self.image.get_rect()
        self.rect.centerx = WIDTH // 2
        self.rect.centery = HEIGHT // 2
        self.velocity = 0

    def update(self):
        self.velocity += GRAVITY
        self.rect.y += self.velocity

    def flap(self):
        self.velocity = -5

    def draw(self):
        screen.blit(self.image, self.rect)

# Wall class
class Wall(pygame.sprite.Sprite):
    def __init__(self, x):
        pygame.sprite.Sprite.__init__(self)
        self.image = wall_img
        self.rect = self.image.get_rect()
        self.rect.x = x
        self.rect.height = random.randint(50, HEIGHT - WALL_GAP - 50)
        self.rect.y = 0
        self.passed = False

    def update(self):
        self.rect.x -= WALL_SPEED

    def draw(self):
        screen.blit(self.image, self.rect)

# Game over
def game_over():
    font = pygame.font.SysFont(None, 48)
    text = font.render('Game Over', True, BLACK)
    screen.blit(text, (WIDTH // 2 - text.get_width() // 2, HEIGHT // 2 - text.get_height() // 2))
    pygame.display.flip()
    pygame.time.wait(2000)

# Create bird
bird = Bird()

# Create walls
walls = pygame.sprite.Group()
wall_x = WIDTH + 50
for i in range(3):
    wall = Wall(wall_x)
    walls.add(wall)
    wall_x += WALL_WIDTH + WALL_GAP

# Game loop
running = True
while running:
    # Process events
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                bird.flap()

    # Update
    bird.update()
    walls.update()

    # Check collisions
    if pygame.sprite.spritecollide(bird, walls, False):
        game_over()
        running = False

    # Remove off-screen walls
    for wall in walls:
        if wall.rect.right < 0:
            walls.remove(wall)

    # Add new walls
    if walls.sprites()[-1].rect.right < WIDTH - WALL_GAP:
        wall_x = walls.sprites()[-1].rect.x + WALL_WIDTH + WALL_GAP
        wall = Wall(wall_x)
        walls.add(wall)

    # Draw
    screen.fill(WHITE)
    bird.draw()
    walls.draw(screen)
    pygame.display.flip()
    clock.tick(FPS)

# Quit
pygame.quit()
sys.exit()
